{"ast":null,"code":"import _classCallCheck from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cristofers/localize/Frontend/src/containers/Search.js\";\nimport React, { Component } from 'react'; //import axios from 'axios'\n//import Suggestions from '../components/Suggestions'\n//const { API_KEY } = process.env\n\nvar API_URL = 'http://localhost:3000/products';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  /*  state = {\n      query: \"\",\n      results: []\n    }\n  \n    getInfo = () => {\n      axios.get(`${API_URL}?keywords=[${this.state.query}]`)\n        .then(({ data }) => {\n          this.setState({\n            results: data.data // returns an object named data, \n                               // as does axios. So... data.data                             \n          })\n        })\n    }\n  \n    handleInputChange = () => {\n      this.setState({\n        query: this.search.value\n      }, () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getInfo()\n          }\n        } \n      })\n    }\n  \n    render() {\n      return (\n        <form>\n          <input\n            placeholder=\"Search for...\"\n            ref={input => this.search = input}\n            onChange={this.handleInputChange}\n          />\n          <Suggestions results={this.state.results} />\n        </form>\n      )\n    }\n  }*/\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      products: []\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(API_URL).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          products: result.products\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          products = _this$state.products;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, products.map(function (product) {\n          return React.createElement(\"li\", {\n            key: product.productName,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, product.productName, \" \", product.price);\n        }));\n      }\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/cristofers/localize/Frontend/src/containers/Search.js"],"names":["React","Component","API_URL","Search","props","state","error","isLoaded","products","fetch","then","res","json","result","setState","message","map","product","productName","price"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AAGA;AAEA;;AACA,IAAMC,OAAO,GAAG,gCAAhB;;IAEMC,M;;;;;AACN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,CAACP,OAAD,CAAL,CACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,QAAQ,EAAEK,MAAM,CAACL;AAFL,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAACF,KAAD,EAAW;AACT,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZP,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL;AAmBD;;;6BAEQ;AAAA,wBAC+B,KAAKD,KADpC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,QADlB,eACkBA,QADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACS,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACR,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,QAAQ,CAACQ,GAAT,CAAa,UAAAC,OAAO;AAAA,iBACnB;AAAI,YAAA,GAAG,EAAEA,OAAO,CAACC,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,OAAO,CAACC,WADX,OACyBD,OAAO,CAACE,KADjC,CADmB;AAAA,SAApB,CADH,CADF;AASD;AACF;;;;EA1FoBlB,S;;AA6FrB,eAAeE,MAAf","sourcesContent":["import React, { Component } from 'react'\n//import axios from 'axios'\n\n\n//import Suggestions from '../components/Suggestions'\n\n//const { API_KEY } = process.env\nconst API_URL = 'http://localhost:3000/products'\n\nclass Search extends Component {\n/*  state = {\n    query: \"\",\n    results: []\n  }\n\n  getInfo = () => {\n    axios.get(`${API_URL}?keywords=[${this.state.query}]`)\n      .then(({ data }) => {\n        this.setState({\n          results: data.data // returns an object named data, \n                             // as does axios. So... data.data                             \n        })\n      })\n  }\n\n  handleInputChange = () => {\n    this.setState({\n      query: this.search.value\n    }, () => {\n      if (this.state.query && this.state.query.length > 1) {\n        if (this.state.query.length % 2 === 0) {\n          this.getInfo()\n        }\n      } \n    })\n  }\n\n  render() {\n    return (\n      <form>\n        <input\n          placeholder=\"Search for...\"\n          ref={input => this.search = input}\n          onChange={this.handleInputChange}\n        />\n        <Suggestions results={this.state.results} />\n      </form>\n    )\n  }\n}*/\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    error: null,\n    isLoaded: false,\n    products: []\n  };\n}\n\ncomponentDidMount() {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          products: result.products\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n}\n\nrender() {\n  const { error, isLoaded, products } = this.state;\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {products.map(product => (\n          <li key={product.productName}>\n            {product.productName} {product.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n}\n\nexport default Search"]},"metadata":{},"sourceType":"module"}