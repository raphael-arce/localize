{"ast":null,"code":"import _classCallCheck from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cristofers/localize/Frontend/src/containers/Search.js\";\nimport React, { Component } from 'react';\nimport Suggestions from '../components/Suggestions'; //const { API_KEY } = process.env\n\nvar API_URL = 'http://localhost:3000/products';\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Search)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.token = null;\n    _this.state = {\n      query: \"\",\n      people: []\n    };\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        query: value\n      });\n\n      _this.search(value);\n    };\n\n    _this.search = function (query) {\n      var url = \"https://swapi.co/api/people?search=\".concat(query);\n      var token = {};\n      _this.token = token;\n      fetch(url).then(function (results) {\n        return results.json();\n      }).then(function (data) {\n        if (_this.token === token) {\n          _this.setState({\n            people: data.results\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //const {products} = this.state;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        placeholder: \"Search for...\",\n        ref: function ref(input) {\n          return _this2.search = input;\n        },\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), this.state.people.map(function (person) {\n        return React.createElement(\"ul\", {\n          key: person.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, person.name));\n      }));\n    }\n  }]);\n\n  return Search;\n}(Component);\n/*\nconstructor(props) {\n  super(props);\n  this.state = {\n    error: null,\n    isLoaded: false,\n    products: []\n  };\n}\n\ncomponentDidMount() {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          products: result\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n}\n\nrender() {\n  const { error, isLoaded, products } = this.state;\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {products.map(product => (\n          <li key={product.productId}>\n            {product.productName} {product.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n}*/\n\n\nexport default Search;","map":{"version":3,"sources":["/Users/cristofers/localize/Frontend/src/containers/Search.js"],"names":["React","Component","Suggestions","API_URL","Search","token","state","query","people","onChange","e","value","target","setState","search","url","fetch","then","results","json","data","input","map","person","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,OAAOC,WAAP,MAAwB,2BAAxB,C,CAEA;;AACA,IAAMC,OAAO,GAAG,gCAAhB;;IAEMC,M;;;;;;;;;;;;;;;;;UACJC,K,GAAQ,I;UACRC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,MAAM,EAAE;AAFF,K;;UAKRC,Q,GAAW,UAAAC,CAAC,EAAI;AAAA,UACNC,KADM,GACID,CAAC,CAACE,MADN,CACND,KADM;;AAEd,YAAKE,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAEI;AADK,OAAd;;AAIA,YAAKG,MAAL,CAAYH,KAAZ;AACD,K;;UAEDG,M,GAAS,UAAAP,KAAK,EAAI;AAChB,UAAMQ,GAAG,gDAAyCR,KAAzC,CAAT;AACA,UAAMF,KAAK,GAAG,EAAd;AACA,YAAKA,KAAL,GAAaA,KAAb;AAEAW,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,OAAO;AAAA,eAAIA,OAAO,CAACC,IAAR,EAAJ;AAAA,OADf,EAEGF,IAFH,CAEQ,UAAAG,IAAI,EAAI;AACZ,YAAI,MAAKf,KAAL,KAAeA,KAAnB,EAA0B;AACxB,gBAAKQ,QAAL,CAAc;AAAEL,YAAAA,MAAM,EAAEY,IAAI,CAACF;AAAf,WAAd;AACD;AACF,OANH;AAOD,K;;;;;;;6BAEQ;AAAA;;AACP;AAEA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,GAAG,EAAE,aAAAG,KAAK;AAAA,iBAAI,MAAI,CAACP,MAAL,GAAcO,KAAlB;AAAA,SAFZ;AAGE,QAAA,QAAQ,EAAE,KAAKZ,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMG,KAAKH,KAAL,CAAWE,MAAX,CAAkBc,GAAlB,CAAsB,UAAAC,MAAM;AAAA,eAC3B;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACC,IAAZ,CADF,CAD2B;AAAA,OAA5B,CANH,CADF;AAeD;;;;EAhDkBvB,S;AAmDrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,eAAeG,MAAf","sourcesContent":["import React, { Component } from 'react'\n\n\nimport Suggestions from '../components/Suggestions'\n\n//const { API_KEY } = process.env\nconst API_URL = 'http://localhost:3000/products'\n\nclass Search extends Component {\n  token = null;\n  state = {\n    query: \"\",\n    people: []\n  };\n\n  onChange = e => {\n    const { value } = e.target;\n    this.setState({\n      query: value\n    });\n\n    this.search(value);\n  };\n\n  search = query => {\n    const url = `https://swapi.co/api/people?search=${query}`;\n    const token = {};\n    this.token = token;\n\n    fetch(url)\n      .then(results => results.json())\n      .then(data => {\n        if (this.token === token) {\n          this.setState({ people: data.results });\n        }\n      });\n  };\n\n  render() {\n    //const {products} = this.state;\n  \n    return (\n      <form>\n        <input\n          placeholder=\"Search for...\"\n          ref={input => this.search = input}\n          onChange={this.onChange}\n        />\n        {this.state.people.map(person => (\n          <ul key={person.name}>\n            <li>{person.name}</li>\n          </ul>\n        ))}\n        \n      </form>\n    )\n  }\n\n}\n/*\nconstructor(props) {\n  super(props);\n  this.state = {\n    error: null,\n    isLoaded: false,\n    products: []\n  };\n}\n\ncomponentDidMount() {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          products: result\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n}\n\nrender() {\n  const { error, isLoaded, products } = this.state;\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {products.map(product => (\n          <li key={product.productId}>\n            {product.productName} {product.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n}*/\n\nexport default Search"]},"metadata":{},"sourceType":"module"}