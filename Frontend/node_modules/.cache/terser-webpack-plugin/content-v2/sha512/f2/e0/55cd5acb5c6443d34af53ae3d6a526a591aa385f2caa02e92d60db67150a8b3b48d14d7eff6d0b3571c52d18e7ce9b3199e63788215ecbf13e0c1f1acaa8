{"map":"{\"version\":3,\"sources\":[\"/Users/cristofers/localize/Frontend/src/components/Suggestions.js\",\"/Users/cristofers/localize/Frontend/src/containers/Search.js\",\"/Users/cristofers/localize/Frontend/src/containers/MapContainer.js\",\"/Users/cristofers/localize/Frontend/src/App.js\",\"/Users/cristofers/localize/Frontend/src/serviceWorker.js\",\"/Users/cristofers/localize/Frontend/src/index.js\"],\"names\":[\"Suggestions\",\"props\",\"options\",\"results\",\"map\",\"r\",\"react_default\",\"a\",\"createElement\",\"key\",\"id\",\"name\",\"API_KEY\",\"process\",\"API_URL\",\"Search\",\"state\",\"query\",\"getInfo\",\"axios\",\"get\",\"concat\",\"_this\",\"then\",\"_ref\",\"data\",\"setState\",\"handleInputChange\",\"search\",\"value\",\"length\",\"_this2\",\"this\",\"placeholder\",\"ref\",\"input\",\"onChange\",\"components_Suggestions\",\"Component\",\"mapStyles\",\"width\",\"height\",\"MapContainer\",\"_Component\",\"Object\",\"classCallCheck\",\"possibleConstructorReturn\",\"getPrototypeOf\",\"apply\",\"arguments\",\"inherits\",\"createClass\",\"dist\",\"google\",\"zoom\",\"style\",\"initialCenter\",\"lat\",\"lng\",\"GoogleApiWrapper\",\"apiKey\",\"App\",\"className\",\"containers_Search\",\"containers_MapContainer\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"sRAWeA,EATK,SAACC,GACnB,IAAMC,EAAUD,EAAME,QAAQC,IAAI,SAAAC,GAAC,OACjCC,EAAAC,EAAAC,cAAA,KAAA,CAAIC,IAAKJ,EAAEK,IACRL,EAAEM,QAGP,OAAOL,EAAAC,EAAAC,cAAA,KAAA,KAAKN,ICHNU,EAAYC,OAAAA,CAAAA,SAAAA,aAAAA,WAAAA,KAAZD,QACFE,EAAU,iCA4CDC,6MAzCbC,MAAQ,CACNC,MAAO,GACPd,QAAS,MAGXe,QAAU,WACRC,EAAAA,EAAMC,IAAN,GAAAC,OAAaP,EAAb,aAAAO,OAAgCT,EAAhC,eAAAS,OAAqDC,EAAKN,MAAMC,MAAhE,MACGM,KAAK,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACPH,EAAKI,SAAS,CACZvB,QAASsB,EAAKA,YAMtBE,kBAAoB,WAClBL,EAAKI,SAAS,CACZT,MAAOK,EAAKM,OAAOC,OAClB,WACGP,EAAKN,MAAMC,OAASK,EAAKN,MAAMC,MAAMa,OAAS,GAC5CR,EAAKN,MAAMC,MAAMa,OAAS,IAAM,GAClCR,EAAKJ,qFAMJ,IAAAa,EAAAC,KACP,OACE1B,EAAAC,EAAAC,cAAA,OAAA,KACEF,EAAAC,EAAAC,cAAA,QAAA,CACEyB,YAAY,gBACZC,IAAK,SAAAC,GAAK,OAAIJ,EAAKH,OAASO,GAC5BC,SAAUJ,KAAKL,oBAEjBrB,EAAAC,EAAAC,cAAC6B,EAAD,CAAalC,QAAS6B,KAAKhB,MAAMb,kBApCpBmC,EAAAA,mBCLfC,EAAY,CAChBC,MAAO,OACPC,OAAQ,OAGGC,EAAb,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAZ,KAAAU,GAAAE,OAAAE,EAAA,EAAAF,CAAAZ,KAAAY,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,MAAAhB,KAAAiB,YAAA,OAAAL,OAAAM,EAAA,EAAAN,CAAAF,EAAAC,GAAAC,OAAAO,EAAA,EAAAP,CAAAF,EAAA,CAAA,CAAAjC,IAAA,SAAAoB,MAAA,WAEI,OACEvB,EAAAC,EAAAC,cAAC4C,EAAA,IAAD,CACEC,OAAQrB,KAAK/B,MAAMoD,OACnBC,KAAM,GACNC,MAAOhB,EACPiB,cAAe,CACdC,KAAM,OACNC,IAAK,eATdhB,EAAA,CAAkCJ,EAAAA,WAgBnBqB,EAAAA,OAAAA,EAAAA,iBAAAA,CAAiB,CAC9BC,OAAQ,2CADKD,CAEZjB,GCIYmB,mLApBX,OACEvD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,kBACXxD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,iBACbxD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,OACbxD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,SAAf,cAIJxD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,UACbxD,EAAAC,EAAAC,cAACuD,EAAD,OAEFzD,EAAAC,EAAAC,cAAA,MAAA,CAAKsD,UAAU,OACbxD,EAAAC,EAAAC,cAACwD,EAAD,eAdM1B,EAAAA,WCIE2B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOjE,EAAAC,EAAAC,cAACgE,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtD,KAAK,SAAAuD,GACjCA,EAAaC\",\"sourcesContent\":[\"import React from 'react'\\n\\nconst Suggestions = (props) => {\\n  const options = props.results.map(r => (\\n    <li key={r.id}>\\n      {r.name}\\n    </li>\\n  ))\\n  return <ul>{options}</ul>\\n}\\n\\nexport default Suggestions\",\"import React, { Component } from 'react'\\nimport axios from 'axios'\\n\\nimport Suggestions from '../components/Suggestions'\\n\\nconst { API_KEY } = process.env\\nconst API_URL = 'http://localhost:3000/products'\\n\\nclass Search extends Component {\\n  state = {\\n    query: \\\"\\\",\\n    results: []\\n  }\\n\\n  getInfo = () => {\\n    axios.get(`${API_URL}?api_key=${API_KEY}?keywords=[${this.state.query}]`)\\n      .then(({ data }) => {\\n        this.setState({\\n          results: data.data // returns an object named data, \\n                             // as does axios. So... data.data                             \\n        })\\n      })\\n  }\\n\\n  handleInputChange = () => {\\n    this.setState({\\n      query: this.search.value\\n    }, () => {\\n      if (this.state.query && this.state.query.length > 1) {\\n        if (this.state.query.length % 2 === 0) {\\n          this.getInfo()\\n        }\\n      } \\n    })\\n  }\\n\\n  render() {\\n    return (\\n      <form>\\n        <input\\n          placeholder=\\\"Search for...\\\"\\n          ref={input => this.search = input}\\n          onChange={this.handleInputChange}\\n        />\\n        <Suggestions results={this.state.results} />\\n      </form>\\n    )\\n  }\\n}\\n\\nexport default Search\",\"import React, { Component } from 'react';\\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\\n\\nconst mapStyles = {\\n  width: '100%',\\n  height: '50%'\\n};\\n\\nexport class MapContainer extends Component {\\n  render() {\\n    return (\\n      <Map\\n        google={this.props.google}\\n        zoom={14}\\n        style={mapStyles}\\n        initialCenter={{\\n         lat: -1.2884,\\n         lng: 36.8233\\n        }}\\n      />\\n    );\\n  }\\n}\\n\\nexport default GoogleApiWrapper({\\n  apiKey: 'AIzaSyCke5lTqeM0OrMmDAVkzdzMY02dbvD_q8M'\\n})(MapContainer);\",\"import React, { Component } from 'react';\\n//import logo from './logo.svg';\\nimport './App.css';\\n \\nimport Search from './containers/Search';\\nimport MapContainer from './containers/MapContainer';\\n//import Map from './containers/Map';\\n\\nclass App extends Component {\\n  render() {\\n    return (\\n      <div className=\\\"main-container\\\">\\n          <div className=\\\"nav-container\\\">\\n            <nav className=\\\"nav\\\">\\n              <div className=\\\"title\\\">Localize</div>\\n            </nav>\\n          </div>\\n      \\n          <div className=\\\"search\\\">\\n            <Search/>\\n          </div>\\n          <div className=\\\"map\\\">\\n            <MapContainer/>\\n          </div>\\n          \\n      </div>\\n    );\\n  }\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read http://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: http://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{21:function(e,t,n){e.exports=n(63)},26:function(e,t,n){},28:function(e,t,n){},63:function(e,t,n){\"use strict\";n.r(t);var a=n(0),r=n.n(a),c=n(9),o=n.n(c),l=(n(26),n(3)),i=n(4),s=n(6),u=n(5),h=n(7),m=(n(28),n(20)),p=n.n(m),d=function(e){var t=e.results.map(function(e){return r.a.createElement(\"li\",{key:e.id},e.name)});return r.a.createElement(\"ul\",null,t)},f=Object({NODE_ENV:\"production\",PUBLIC_URL:\"\"}).API_KEY,v=\"http://localhost:3000/products\",y=function(e){function t(){var e,n;Object(l.a)(this,t);for(var a=arguments.length,r=new Array(a),c=0;c<a;c++)r[c]=arguments[c];return(n=Object(s.a)(this,(e=Object(u.a)(t)).call.apply(e,[this].concat(r)))).state={query:\"\",results:[]},n.getInfo=function(){p.a.get(\"\".concat(v,\"?api_key=\").concat(f,\"?keywords=[\").concat(n.state.query,\"]\")).then(function(e){var t=e.data;n.setState({results:t.data})})},n.handleInputChange=function(){n.setState({query:n.search.value},function(){n.state.query&&n.state.query.length>1&&n.state.query.length%2===0&&n.getInfo()})},n}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){var e=this;return r.a.createElement(\"form\",null,r.a.createElement(\"input\",{placeholder:\"Search for...\",ref:function(t){return e.search=t},onChange:this.handleInputChange}),r.a.createElement(d,{results:this.state.results}))}}]),t}(a.Component),b=n(12),g={width:\"100%\",height:\"50%\"},E=function(e){function t(){return Object(l.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(b.Map,{google:this.props.google,zoom:14,style:g,initialCenter:{lat:-1.2884,lng:36.8233}})}}]),t}(a.Component),O=Object(b.GoogleApiWrapper)({apiKey:\"AIzaSyCke5lTqeM0OrMmDAVkzdzMY02dbvD_q8M\"})(E),j=function(e){function t(){return Object(l.a)(this,t),Object(s.a)(this,Object(u.a)(t).apply(this,arguments))}return Object(h.a)(t,e),Object(i.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"main-container\"},r.a.createElement(\"div\",{className:\"nav-container\"},r.a.createElement(\"nav\",{className:\"nav\"},r.a.createElement(\"div\",{className:\"title\"},\"Localize\"))),r.a.createElement(\"div\",{className:\"search\"},r.a.createElement(y,null)),r.a.createElement(\"div\",{className:\"map\"},r.a.createElement(O,null)))}}]),t}(a.Component);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(j,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[21,2,1]]]);","extractedComments":[]}