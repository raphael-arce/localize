{"ast":null,"code":"import _classCallCheck from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cristofers/localize/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cristofers/localize/Frontend/src/containers/Search.js\";\nimport React, { Component } from 'react'; //import Suggestions from '../components/Suggestions'\n//const { API_KEY } = process.env\n//const API_URL = 'http://localhost:3000/products'\n\nvar Search =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Search, _Component);\n\n  function Search(props) {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this, props));\n\n    _this.onChange = function (e) {\n      var value = e.target.value;\n\n      _this.setState({\n        query: value\n      });\n\n      _this.search(value);\n    };\n\n    _this.search = function (query) {\n      var url = \"http://localhost:3000/products?keywords=[\\\"\".concat(query, \"\\\"]\");\n      fetch(url).then(function (results) {\n        console.log(results.json());\n        return results.json();\n      }).then(function (json) {\n        _this.setState({\n          products: json\n        });\n      });\n    };\n\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      products: []\n    };\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          products = _this$state.products;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"form\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          placeholder: \"Search for...\",\n          ref: function ref(input) {\n            return _this2.searcher = input;\n          },\n          onChange: this.onChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }), this.state.products.map(function (product) {\n          return React.createElement(\"ul\", {\n            key: product.productId,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }, React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, product.productName));\n        }));\n      }\n    }\n  }]);\n\n  return Search;\n}(Component);\n/*\nconstructor(props) {\n  super(props);\n  this.state = {\n    error: null,\n    isLoaded: false,\n    products: []\n  };\n}\n\ncomponentDidMount() {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          products: result\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n}\n\nrender() {\n  const { error, isLoaded, products } = this.state;\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {products.map(product => (\n          <li key={product.productId}>\n            {product.productName} {product.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n}*/\n\n\nexport default Search;","map":{"version":3,"sources":["/Users/cristofers/localize/Frontend/src/containers/Search.js"],"names":["React","Component","Search","props","onChange","e","value","target","setState","query","search","url","fetch","then","results","console","log","json","products","state","error","isLoaded","message","input","searcher","map","product","productId","productName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CAGA;AAEA;AACA;;IAEMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UASnBC,QATmB,GASR,UAAAC,CAAC,EAAI;AAAA,UACNC,KADM,GACID,CAAC,CAACE,MADN,CACND,KADM;;AAEd,YAAKE,QAAL,CAAc;AACZC,QAAAA,KAAK,EAAEH;AADK,OAAd;;AAIA,YAAKI,MAAL,CAAYJ,KAAZ;AACD,KAhBkB;;AAAA,UAmBnBI,MAnBmB,GAmBV,UAAAD,KAAK,EAAI;AAChB,UAAME,GAAG,wDAAgDF,KAAhD,QAAT;AAGAG,MAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACQ,UAAAC,OAAO,EAAI;AACfC,QAAAA,OAAO,CAACC,GAAR,CAAYF,OAAO,CAACG,IAAR,EAAZ;AACA,eAAOH,OAAO,CAACG,IAAR,EAAP;AACD,OAJH,EAKGJ,IALH,CAKQ,UAAAI,IAAI,EAAI;AAEV,cAAKT,QAAL,CAAc;AAAEU,UAAAA,QAAQ,EAAED;AAAZ,SAAd;AAEH,OATH;AAUD,KAjCkB;;AAEjB,UAAKE,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXH,MAAAA,QAAQ,EAAE;AAHC,KAAb;AAFiB;AAOlB;;;;6BA6BQ;AAAA;;AAAA,wBAC+B,KAAKC,KADpC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBH,QADlB,eACkBA,QADlB;;AAEP,UAAIE,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACE,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACD,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACP,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,WAAW,EAAC,eADd;AAEE,UAAA,GAAG,EAAE,aAAAE,KAAK;AAAA,mBAAI,MAAI,CAACC,QAAL,GAAgBD,KAApB;AAAA,WAFZ;AAGE,UAAA,QAAQ,EAAE,KAAKnB,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAMG,KAAKe,KAAL,CAAWD,QAAX,CAAoBO,GAApB,CAAwB,UAAAC,OAAO;AAAA,iBAC9B;AAAI,YAAA,GAAG,EAAEA,OAAO,CAACC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,OAAO,CAACE,WAAb,CADF,CAD8B;AAAA,SAA/B,CANH,CADF;AAeC;AACF;;;;EA5DkB3B,S;AA+DrB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoDA,eAAeC,MAAf","sourcesContent":["import React, { Component } from 'react'\n\n\n//import Suggestions from '../components/Suggestions'\n\n//const { API_KEY } = process.env\n//const API_URL = 'http://localhost:3000/products'\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      products: []\n    };\n  }\n\n  onChange = e => {\n    const { value } = e.target;\n    this.setState({\n      query: value\n    });\n\n    this.search(value);\n  };\n\n  \n  search = query => {\n    const url = `http://localhost:3000/products?keywords=[\"${query}\"]`;\n    \n\n    fetch(url)\n      .then(results => {\n        console.log(results.json())\n        return results.json()\n      })\n      .then(json => {\n        \n          this.setState({ products: json });\n        \n      });\n  };\n\n  \n  render() {\n    const { error, isLoaded, products } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n    return (\n      <form>\n        <input\n          placeholder=\"Search for...\"\n          ref={input => this.searcher = input}\n          onChange={this.onChange}\n        />\n        {this.state.products.map(product => (\n          <ul key={product.productId}>\n            <li>{product.productName}</li>\n          </ul>\n        ))}\n        \n      </form>\n    )\n    }\n  }\n\n}\n/*\nconstructor(props) {\n  super(props);\n  this.state = {\n    error: null,\n    isLoaded: false,\n    products: []\n  };\n}\n\ncomponentDidMount() {\n  fetch(API_URL)\n    .then(res => res.json())\n    .then(\n      (result) => {\n        this.setState({\n          isLoaded: true,\n          products: result\n        });\n      },\n      // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n}\n\nrender() {\n  const { error, isLoaded, products } = this.state;\n  if (error) {\n    return <div>Error: {error.message}</div>;\n  } else if (!isLoaded) {\n    return <div>Loading...</div>;\n  } else {\n    return (\n      <ul>\n        {products.map(product => (\n          <li key={product.productId}>\n            {product.productName} {product.price}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n}*/\n\nexport default Search"]},"metadata":{},"sourceType":"module"}